{"version":3,"sources":["components/drawer/button.tsx","components/drawer/cancel-set-btn-group.tsx","components/drawer/drawer.tsx","components/drawer/index.tsx","components/exampleData.ts","components/picker-old/index.tsx","components/picker-with-mui/index.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["MaterialButton","showType","className","classes","style","disabled","startIcon","onClick","children","Button","variant","label","classnames","material_button_flex","material_button_block","outline","textTransform","CancelSetBtnGroup","cancelClassName","okClassName","groupStyle","cancelStyle","okStyle","handleClose","handleOk","classNames","height","minHeight","borderBottom","color","backgroundColor","fontSize","fontWeight","MaterialDrawer","visible","position","Drawer","open","anchor","CancelSetDrawer","hideCancelSetBtnGroup","DATA1","Array","fill","map","_","i","text","value","DATA2","DATA3","BScroll","use","Wheel","MouseWheel","pickerData","DoubleColumn","setVisible","setSelectedText","selectedText","useState","length","selectedIndexPair","setSelectedIndexPair","wrapperRef","useRef","scrollRef","useEffect","createWheel","wheelWrappers","current","refresh","wheel","wheelWrapperClass","wheelItemClass","selectedIndex","rotate","mouseWheel","speed","easeTime","discreteTime","dampingFactor","useTransition","probeType","wrapper","from","handleHide","onTouchMove","e","preventDefault","stopPropagation","forEach","restorePosition","currentSelectedIndexPair","getSelectedIndex","data","index","join","ref","item","PickerWithMUI","App","materialTheme","createTheme","palette","primary","main","secondary","error","background","default","ThemeProvider","theme","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a2112f9.chunk.js","sourcesContent":["import React, { FC, MouseEventHandler } from \"react\";\nimport classnames from \"classnames\";\nimport { StyledComponentProps } from \"@material-ui/styles/withStyles/withStyles\";\nimport Button from \"@material-ui/core/Button\";\n\ninterface IProps {\n  /**\n   * 显示类型，文字按钮？实心按钮？边框按钮？\n   * */\n  showType?: \"text\" | \"contained\" | \"outlined\";\n  /**\n   * hover时的文字颜色\n   * */\n  hoverColor?: string;\n  /**\n   * hover时的背景色\n   * */\n  hoverBackgroundColor?: string;\n  /**\n   * 给按钮增加类名\n   * */\n  className?: string;\n  /**\n   * material ui专用属性\n   * */\n  classes?: StyledComponentProps[\"classes\"];\n  /**\n   * 是否禁用\n   * */\n  disabled?: boolean;\n  /**\n   * 前面的icon\n   * */\n  startIcon?: React.ReactNode;\n  /**\n   * 自定义样式\n   * */\n  style?: React.CSSProperties;\n  /**\n   * 按钮的点击回调\n   * */\n  onClick?: MouseEventHandler<HTMLButtonElement> | undefined;\n}\n\n/**\n * 按钮组件\n * */\nconst MaterialButton: FC<IProps> = ({\n  showType = \"contained\",\n  className = \"\",\n  classes,\n  style = {},\n  disabled = false,\n  startIcon,\n  onClick,\n  children,\n}) => (\n  <Button\n    variant={showType}\n    classes={{ label: \"whitespace-nowrap\", ...classes }}\n    className={classnames(\n      \"material_button\",\n      { material_button_flex: !!startIcon },\n      { material_button_block: !startIcon },\n      className\n    )}\n    disabled={disabled}\n    startIcon={startIcon}\n    style={{\n      outline: \"none\",\n      textTransform: \"capitalize\",\n      ...style,\n    }}\n    onClick={onClick}\n  >\n    {children}\n  </Button>\n);\n\nexport default MaterialButton;\n","import React, { FC, MouseEventHandler } from 'react';\nimport classNames from 'classnames';\nimport MaterialButton from './button';\n\ninterface IProps {\n  className?: string;\n  cancelClassName?: string;\n  okClassName?: string;\n  groupStyle?: React.CSSProperties;\n  cancelStyle?: React.CSSProperties;\n  okStyle?: React.CSSProperties;\n  handleClose: MouseEventHandler<HTMLButtonElement>;\n  handleOk: MouseEventHandler<HTMLButtonElement>;\n}\n\nconst CancelSetBtnGroup: FC<IProps> = ({\n  className = '',\n  cancelClassName = '',\n  okClassName = '',\n  groupStyle = {},\n  cancelStyle = {},\n  okStyle = {},\n  handleClose,\n  handleOk,\n}) => (\n  <article\n    className={classNames('p-4 box-border overflow-hidden flex justify-between', `${className}`)}\n    style={{\n      height: 76,\n      minHeight: 76,\n      borderBottom: '1px solid rgba(0, 0, 0, 0.1)',\n      ...groupStyle,\n    }}\n  >\n    <MaterialButton\n      className={cancelClassName}\n      style={{\n        color: '#202020',\n        backgroundColor: '#FCFCFC',\n        fontSize: 16,\n        fontWeight: 400,\n        ...cancelStyle,\n      }}\n      onClick={handleClose}\n    >\n      取消\n    </MaterialButton>\n    <MaterialButton\n      className={okClassName}\n      style={{\n        backgroundColor: '#CC2227',\n        color: '#FFFFFF',\n        fontSize: 16,\n        fontWeight: 400,\n        ...okStyle,\n      }}\n      onClick={handleOk}\n    >\n      确认\n    </MaterialButton>\n  </article>\n);\n\nexport default CancelSetBtnGroup;\n","import React, { FC } from \"react\";\nimport { Drawer } from \"@material-ui/core\";\nimport { DrawerProps } from \"@material-ui/core/Drawer/Drawer\";\n\ninterface IProps extends DrawerProps {\n  visible: boolean;\n  className?: string;\n  position?: \"top\" | \"left\" | \"bottom\" | \"right\";\n}\n\n/**\n * 抽屉 UI 组件\n * @param visible 显示开关\n * @param className 类名\n * @param position 控制抽屉显示方向\n * @param children 子组件\n * */\nconst MaterialDrawer: FC<IProps> = ({\n  visible,\n  className = \"\",\n  position = \"bottom\",\n  children,\n}) => (\n  <Drawer open={visible} className={className} anchor={position}>\n    {children}\n  </Drawer>\n);\n\nexport default MaterialDrawer;\n","import React, { FC, MouseEventHandler, CSSProperties } from \"react\";\nimport CancelSetBtnGroup from \"./cancel-set-btn-group\";\nimport MaterialDrawer from \"./drawer\";\ninterface IProps {\n  visible: boolean;\n  className?: string;\n  bodyClassName?: string;\n  bodyStyle?: CSSProperties;\n  handleClose: MouseEventHandler<HTMLButtonElement>;\n  handleOk: MouseEventHandler<HTMLButtonElement>;\n  hideCancelSetBtnGroup?: boolean;\n}\n\n/**\n * 使用了取消，确定作为顶部按钮的弹出窗口\n * @param visible 是否可见\n * @param theme 主题\n * @param className 自定义弹窗的类名\n * @param handleClose 取消按钮的回调\n * @param handleOk 确定按钮的回调\n * @param children 子组件\n * */\nconst CancelSetDrawer: FC<IProps> = ({\n  visible,\n  className,\n  handleClose,\n  handleOk,\n  children,\n  hideCancelSetBtnGroup,\n}) => (\n  <MaterialDrawer className={className} visible={visible}>\n    {!hideCancelSetBtnGroup ? (\n      <CancelSetBtnGroup handleClose={handleClose} handleOk={handleOk} />\n    ) : null}\n    {children}\n  </MaterialDrawer>\n);\n\nexport default CancelSetDrawer;\n","export const DATA1 = new Array(1000).fill(0).map((_, i) => ({\n  text: `${i + 1}`,\n  value: i + 1,\n}));\n\nexport const DATA2 = new Array(24).fill(0).map((_, i) => ({\n  text: `${i}`,\n  value: i,\n}));\n\nexport const DATA3 = new Array(60).fill(0).map((_, i) => ({\n  text: `${i}`,\n  value: i,\n}));\n\n\n","import React, {\n  FC,\n  useState,\n  useRef,\n  useEffect,\n  Dispatch,\n  SetStateAction,\n} from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport BScroll from \"@better-scroll/core\";\nimport Wheel from \"@better-scroll/wheel\";\nimport MouseWheel from \"@better-scroll/mouse-wheel\";\nimport { DATA1, DATA2, DATA3 } from \"../exampleData\";\nimport \"./picker.scss\";\nimport CancelSetBtnGroup from \"../drawer/cancel-set-btn-group\";\nBScroll.use(Wheel);\nBScroll.use(MouseWheel);\n\nconst pickerData = [DATA1, DATA2, DATA3];\n\ninterface IProps {\n  visible: boolean;\n  setVisible: Dispatch<SetStateAction<boolean>>;\n  selectedText: string;\n  setSelectedText: Dispatch<SetStateAction<string>>;\n}\n\nconst DoubleColumn: FC<IProps> = ({\n  visible,\n  setVisible,\n  selectedText,\n  setSelectedText,\n}) => {\n  const [selectedIndexPair, setSelectedIndexPair] = useState(\n    new Array(pickerData.length).fill(0)\n  );\n\n  const wrapperRef = useRef<HTMLDivElement>(null);\n  const scrollRef = useRef<BScroll[]>([]);\n\n  useEffect(() => {\n    if (visible) {\n      const createWheel = (wheelWrappers: HTMLElement[], i: number) => {\n        if (scrollRef.current[i]) {\n          scrollRef.current[i].refresh();\n        } else {\n          scrollRef.current[i] = new BScroll(wheelWrappers[i], {\n            wheel: {\n              wheelWrapperClass: \"wheel-scroll\",\n              wheelItemClass: \"wheel-item\",\n              selectedIndex: selectedIndexPair[i],\n              rotate: 0,\n            },\n            mouseWheel: {\n              speed:\n                pickerData[i].length > 400 ? 400 * 5 : pickerData[i].length * 5,\n              easeTime: 100,\n              discreteTime: 150,\n              dampingFactor: 0.1,\n            },\n            useTransition: false,\n            probeType: 3,\n          });\n        }\n      };\n\n      const wrapper = wrapperRef.current;\n      for (let i = 0; i < pickerData.length; i++) {\n        if (wrapper !== null) {\n          createWheel(Array.from(wrapper.children) as HTMLElement[], i);\n        }\n      }\n    }\n  }, [visible, selectedIndexPair]);\n\n  const handleHide = () => {\n    setVisible(false);\n  };\n\n  const handleConfirm = () => {\n    scrollRef.current.forEach((wheel) => {\n      wheel.restorePosition();\n    });\n    handleHide();\n    const currentSelectedIndexPair = scrollRef.current.map((wheel) =>\n      wheel.getSelectedIndex()\n    );\n    setSelectedIndexPair(currentSelectedIndexPair);\n    setSelectedText(\n      pickerData\n        .map((data, i) => {\n          const index = currentSelectedIndexPair[i];\n          return `${data[index].text}-${index}`;\n        })\n        .join(\"__\")\n    );\n  };\n\n  const handleCancel = () => {\n    scrollRef.current.forEach((wheel) => {\n      wheel.restorePosition();\n    });\n    handleHide();\n  };\n\n  return (\n    <>\n      {/* <CSSTransition\n        in={visible}\n        classNames=\"picker-fade\"\n        timeout={300}\n        onEnter={(node: { style: { display: string } }): void => {\n          node.style.display = \"block\";\n        }}\n        onExited={(node) => {\n          node.style.display = \"\";\n        }}\n      > */}\n      <div\n        className=\"picker\"\n        // onClick={handleCancel}\n        onTouchMove={(e) => {\n          e.preventDefault();\n        }}\n      >\n        {/* <CSSTransition in={visible} classNames=\"picker-move\" timeout={300}> */}\n        <div\n          className=\"picker-panel\"\n          onClick={(e) => {\n            e.stopPropagation();\n          }}\n        >\n          <CancelSetBtnGroup\n            handleClose={handleCancel}\n            handleOk={handleConfirm}\n          />\n\n          <div className=\"picker-content\">\n            <div className=\"mask-top border-bottom-1px\"></div>\n            <div className=\"mask-bottom border-top-1px\"></div>\n            <div className=\"wheel-wrapper\" ref={wrapperRef}>\n              {pickerData.map((data, index) => (\n                <div className=\"wheel\" key={index}>\n                  <ul className=\"wheel-scroll\">\n                    {data.map((item) => (\n                      <li key={item.text} className=\"wheel-item select-none\">\n                        {item.text}\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              ))}\n            </div>\n          </div>\n          <div className=\"picker-footer\"></div>\n        </div>\n        {/* </CSSTransition> */}\n      </div>\n      {/* </CSSTransition> */}\n    </>\n  );\n};\n\nexport default DoubleColumn;\n","import { useState } from \"react\";\nimport CancelSetDrawer from \"../drawer\";\nimport Picker from \"../picker-old/index\";\nimport Button from \"@material-ui/core/Button\";\n\nconst PickerWithMUI = () => {\n  const [visible, setVisible] = useState(false);\n  const [selectedText, setSelectedText] = useState(\"open\");\n\n  const handleOk = () => {\n    setVisible(false);\n  };\n\n  const handleClose = () => {\n    setVisible(false);\n  };\n\n  return (\n    <div className=\"container view\">\n      <Button\n        onClick={() => {\n          setVisible(true);\n        }}\n      >\n        {selectedText}\n      </Button>\n      <CancelSetDrawer\n        visible={visible}\n        className=\"src-app-components-option-notes\"\n        handleOk={handleOk}\n        handleClose={handleClose}\n        hideCancelSetBtnGroup={true}\n      >\n        <Picker\n          selectedText={selectedText}\n          setSelectedText={setSelectedText}\n          visible={visible}\n          setVisible={setVisible}\n        />\n      </CancelSetDrawer>\n    </div>\n  );\n};\n\nexport default PickerWithMUI;\n","import \"./App.css\";\nimport { createTheme, ThemeProvider } from \"@material-ui/core/styles\";\n\nimport PickerWithMUI from \"./components/picker-with-mui\";\n\nfunction App() {\n  const materialTheme = createTheme({\n    palette: {\n      primary: {\n        main: \"#202020\", // 不支持纯文字的颜色，如red. 只能用rgb之类的颜色\n      },\n      secondary: {\n        main: \"#FFFFFF\",\n      },\n      error: {\n        main: \"#CC2227\",\n      },\n      background: {\n        default: \"#FCFCFC\",\n      },\n    },\n  });\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={materialTheme}>\n        <PickerWithMUI />\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}