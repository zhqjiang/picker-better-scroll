{"version":3,"sources":["components/exampleData.ts","components/picker.tsx","App.js","reportWebVitals.js","index.tsx"],"names":["DATA1","Array","fill","map","_","i","text","value","DATA2","DATA3","BScroll","use","Wheel","MouseWheel","pickerData","DoubleColumn","useState","visible","setVisible","length","selectedIndexPair","setSelectedIndexPair","selectedText","setSelectedText","wrapperRef","useRef","scrollRef","useEffect","createWheel","wheelWrappers","current","refresh","wheel","wheelWrapperClass","wheelItemClass","selectedIndex","rotate","mouseWheel","speed","easeTime","discreteTime","dampingFactor","useTransition","probeType","wrapper","from","children","handleHide","handleCancel","forEach","restorePosition","className","onClick","CSSTransition","in","classNames","timeout","onEnter","node","style","display","onExited","onTouchMove","e","preventDefault","stopPropagation","currentSelectedIndexPair","getSelectedIndex","data","index","join","ref","item","App","onCancel","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c6928b6.chunk.js","sourcesContent":["export const DATA1 = new Array(1000).fill(0).map((_, i) => ({\n  text: `${i + 1}`,\n  value: i + 1,\n}));\n\nexport const DATA2 = new Array(24).fill(0).map((_, i) => ({\n  text: `${i}`,\n  value: i,\n}));\n\nexport const DATA3 = new Array(60).fill(0).map((_, i) => ({\n  text: `${i}`,\n  value: i,\n}));\n\n\n","import React, { useState, useRef, useEffect } from \"react\";\nimport \"./picker.scss\";\nimport { CSSTransition } from \"react-transition-group\";\nimport BScroll from \"@better-scroll/core\";\nimport Wheel from \"@better-scroll/wheel\";\nimport MouseWheel from \"@better-scroll/mouse-wheel\";\nimport { DATA1, DATA2, DATA3 } from \"./exampleData\";\nBScroll.use(Wheel);\nBScroll.use(MouseWheel);\n\nconst pickerData = [DATA1, DATA2, DATA3];\n\nconst DoubleColumn = () => {\n  const [visible, setVisible] = useState(false);\n  const [selectedIndexPair, setSelectedIndexPair] = useState(\n    new Array(pickerData.length).fill(0)\n  );\n  const [selectedText, setSelectedText] = useState(\"open\");\n\n  const wrapperRef = useRef<HTMLDivElement>(null);\n  const scrollRef = useRef<BScroll[]>([]);\n\n  useEffect(() => {\n    if (visible) {\n      const createWheel = (wheelWrappers: HTMLElement[], i: number) => {\n        if (scrollRef.current[i]) {\n          scrollRef.current[i].refresh();\n        } else {\n          scrollRef.current[i] = new BScroll(wheelWrappers[i], {\n            wheel: {\n              wheelWrapperClass: \"wheel-scroll\",\n              wheelItemClass: \"wheel-item\",\n              selectedIndex: selectedIndexPair[i],\n              rotate: 0,\n            },\n            mouseWheel: {\n              speed:\n                pickerData[i].length > 400 ? 400 * 5 : pickerData[i].length * 5,\n              easeTime: 100,\n              discreteTime: 150,\n              dampingFactor: 0.1,\n            },\n            useTransition: false,\n            probeType: 3,\n          });\n        }\n      };\n\n      const wrapper = wrapperRef.current;\n      for (let i = 0; i < pickerData.length; i++) {\n        if (wrapper !== null) {\n          createWheel(Array.from(wrapper.children) as HTMLElement[], i);\n        }\n      }\n    }\n  }, [visible, selectedIndexPair]);\n\n  const handleShow = () => {\n    if (visible) {\n      return;\n    }\n    setVisible(true);\n  };\n\n  const handleHide = () => {\n    setVisible(false);\n  };\n\n  const handleConfirm = () => {\n    scrollRef.current.forEach((wheel) => {\n      wheel.restorePosition();\n    });\n    handleHide();\n    const currentSelectedIndexPair = scrollRef.current.map((wheel) =>\n      wheel.getSelectedIndex()\n    );\n    setSelectedIndexPair(currentSelectedIndexPair);\n    setSelectedText(\n      pickerData\n        .map((data, i) => {\n          const index = currentSelectedIndexPair[i];\n          return `${data[index].text}-${index}`;\n        })\n        .join(\"__\")\n    );\n  };\n\n  const handleCancel = () => {\n    scrollRef.current.forEach((wheel) => {\n      wheel.restorePosition();\n    });\n    handleHide();\n  };\n\n  return (\n    <div className=\"container view\">\n      <div className=\"container-btn\" onClick={handleShow}>\n        {selectedText}\n      </div>\n      <CSSTransition\n        in={visible}\n        classNames=\"picker-fade\"\n        timeout={300}\n        onEnter={(node: { style: { display: string } }): void => {\n          node.style.display = \"block\";\n        }}\n        onExited={(node) => {\n          node.style.display = \"\";\n        }}\n      >\n        <div\n          className=\"picker\"\n          onClick={handleCancel}\n          onTouchMove={(e) => {\n            e.preventDefault();\n          }}\n        >\n          <CSSTransition in={visible} classNames=\"picker-move\" timeout={300}>\n            <div\n              className=\"picker-panel\"\n              onClick={(e) => {\n                e.stopPropagation();\n              }}\n            >\n              <div className=\"picker-choose border-bottom-1px\">\n                <span className=\"cancel\" onClick={handleCancel}>\n                  Cancel\n                </span>\n                <span className=\"confirm\" onClick={handleConfirm}>\n                  Confirm\n                </span>\n                <h1 className=\"picker-title\">Title</h1>\n              </div>\n              <div className=\"picker-content\">\n                <div className=\"mask-top border-bottom-1px\"></div>\n                <div className=\"mask-bottom border-top-1px\"></div>\n                <div className=\"wheel-wrapper\" ref={wrapperRef}>\n                  {pickerData.map((data, index) => (\n                    <div className=\"wheel\" key={index}>\n                      <ul className=\"wheel-scroll\">\n                        {data.map((item) => (\n                          <li key={item.text} className=\"wheel-item\">\n                            {item.text}\n                          </li>\n                        ))}\n                      </ul>\n                    </div>\n                  ))}\n                </div>\n              </div>\n              <div className=\"picker-footer\"></div>\n            </div>\n          </CSSTransition>\n        </div>\n      </CSSTransition>\n    </div>\n  );\n};\n\nexport default DoubleColumn;\n","import \"./App.css\";\n\nimport Picker from \"./components/picker\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Picker\n        onCancel={() => {\n          console.log(\"onCancel\");\n        }}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}